import { AutofillOptions, AutofillRetrieveResponse, AutofillSuggestion, AutofillSuggestionResponse } from '@mapbox/search-js-core';
import { MapboxSearchListbox } from './MapboxSearchListbox';
import { HTMLScopedElement } from './HTMLScopedElement';
import { MapboxHTMLEvent } from '../MapboxHTMLEvent';
export declare type MapboxSearchListboxAutofillType = MapboxSearchListbox<AutofillOptions, AutofillSuggestion, AutofillSuggestionResponse, AutofillRetrieveResponse>;
declare type AutofillEventTypes = {
    /**
     * Fired when the user is typing in the input and provides a list of suggestions.
     *
     * The underlying response from {@link MapboxAutofill} is passed as the event's detail.
     *
     * @event suggest
     * @instance
     * @memberof MapboxAddressAutofill2
     * @type {AutofillSuggestionResponse}
     * @example
     * ```typescript
     * autofill.addEventListener('suggest', (event) => {
     *   const suggestions = event.detail.suggestions;
     *   // ...
     * });
     * ```
     */
    suggest: MapboxHTMLEvent<AutofillSuggestionResponse>;
    /**
     * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.
     *
     * The underlying error is passed as the event's detail.
     *
     * @event suggesterror
     * @instance
     * @memberof MapboxAddressAutofill2
     * @type {Error}
     * @example
     * ```typescript
     * autofill.addEventListener('suggesterror', (event) => {
     *   const error = event.detail;
     *   // ...
     * });
     * ```
     */
    suggesterror: MapboxHTMLEvent<Error>;
    /**
     * Fired when the user has selected a suggestion, before the form is autofilled.
     *
     * The underlying response from {@link MapboxAutofill} is passed as the event's detail.
     *
     * @event retrieve
     * @instance
     * @memberof MapboxAddressAutofill2
     * @type {AutofillRetrieveResponse}
     * @example
     * ```typescript
     * autofill.addEventListener('retrieve', (event) => {
     *   const featureCollection = event.detail;
     *   // ...
     * });
     * ```
     */
    retrieve: MapboxHTMLEvent<AutofillRetrieveResponse>;
};
/**
 * `MapboxAddressAutofill2`, also available as the element `<mapbox-address-autofill>`,
 * is an element that wraps an address [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with
 * intelligent, location-aware autocomplete functionality.
 *
 * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).
 *
 * This element must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form
 * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have
 * this functionality.
 * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)
 * - [Autofill](https://web.dev/learn/forms/autofill/)
 *
 * @class MapboxAddressAutofill2
 * @example
 * <form>
 *   <mapbox-address-autofill access-token="<your access token here>">
 *     <input type="text" name="address" autocomplete="shipping street-address" />
 *   </mapbox-address-autofill>
 * </form>
 */
export declare class MapboxAddressAutofill2 extends HTMLScopedElement<AutofillEventTypes> {
    #private;
    connectedCallback(): void;
    disconnectedCallback(): void;
    /** @section {Methods} */
    /**
     * Focuses the wrapped input element.
     */
    focus(): void;
}
declare global {
    interface Window {
        MapboxAddressAutofill2: typeof MapboxAddressAutofill2;
    }
}
export {};
