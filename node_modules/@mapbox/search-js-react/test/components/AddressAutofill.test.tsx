import React from 'react';
import { render } from '@testing-library/react';
import {
  AddressConfirmOptions,
  MapboxAddressAutofill,
  MapboxHTMLEvent,
  Theme
} from '@mapbox/search-js-web';

import { AddressAutofill } from '../../src';
import { AutofillOptions } from '@mapbox/search-js-core';
import { AddressAutofillRefType } from '../../src/components/AddressAutofill';

const OPTIONS: Partial<AutofillOptions> = { language: 'de' };
const THEME: Theme = { variables: { fontFamily: 'Comic Sans MS ' } };
const CONFIRM_ON_BROWSER_AUTOFILL: AddressConfirmOptions = {
  minimap: true,
  sections: ['section-shipping']
};

describe('AddressAutofill', () => {
  it('renders', () => {
    const handleSuggest = jest.fn();
    const handleSuggestError = jest.fn();
    const handleRetrieve = jest.fn();

    const ref = React.createRef<AddressAutofillRefType>();
    const { baseElement, rerender, unmount } = render(
      <form>
        <AddressAutofill
          ref={ref}
          accessToken="xyz"
          options={OPTIONS}
          theme={THEME}
          confirmOnBrowserAutofill={CONFIRM_ON_BROWSER_AUTOFILL}
          onSuggest={handleSuggest}
          onSuggestError={handleSuggestError}
          onRetrieve={handleRetrieve}
        >
          <input
            type="text"
            name="address"
            autoComplete="shipping street-address"
          />
        </AddressAutofill>
      </form>
    );

    const autofill = baseElement.querySelector<MapboxAddressAutofill>(
      'mapbox-address-autofill'
    );
    expect(autofill).toBeTruthy();

    expect(autofill.accessToken).toBe('xyz');
    expect(autofill.options).toEqual(OPTIONS);
    expect(autofill.theme).toEqual(THEME);
    expect(autofill.confirmOnBrowserAutofill).toEqual(
      CONFIRM_ON_BROWSER_AUTOFILL
    );

    autofill.dispatchEvent(new MapboxHTMLEvent('suggest', { suggestions: [] }));
    expect(handleSuggest).toHaveBeenCalledTimes(1);

    autofill.dispatchEvent(
      new MapboxHTMLEvent('suggesterror', new Error('foo'))
    );
    expect(handleSuggestError).toHaveBeenCalledTimes(1);

    autofill.dispatchEvent(
      new MapboxHTMLEvent('retrieve', {
        suggestions: []
      })
    );
    expect(handleRetrieve).toHaveBeenCalledTimes(1);

    expect(ref.current).toBeTruthy();
    jest.spyOn(autofill, 'focus');
    ref.current.focus();
    expect(autofill.focus).toHaveBeenCalledTimes(1);

    rerender(
      <form>
        <AddressAutofill
          ref={ref}
          accessToken="xyz"
          options={OPTIONS}
          theme={THEME}
          confirmOnBrowserAutofill={CONFIRM_ON_BROWSER_AUTOFILL}
        >
          <input
            type="text"
            name="address"
            autoComplete="shipping street-address"
          />
        </AddressAutofill>
      </form>
    );

    const oldRef = ref.current;
    unmount();
    expect(oldRef.focus).toThrowError('AddressAutofill is not mounted');
  });
});
