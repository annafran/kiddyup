import { renderHook, act } from '@testing-library/react-hooks';
import { Evented } from '@mapbox/search-js-core';

import { useEvented } from '../../src/hooks/useEvented';

let EVENTED = new Evented<Record<string, string>>();

test('useEvented', () => {
  const listenerOne = jest.fn();
  const listenerTwo = jest.fn();

  const { rerender } = renderHook(
    ({ listener }) => useEvented(EVENTED, 'test', listener),
    { initialProps: { listener: listenerOne } }
  );

  act(() => {
    EVENTED.fire('test', 'foo');
  });

  expect(listenerOne).toHaveBeenCalledWith('foo');
  listenerOne.mockClear();

  act(() => {
    rerender({ listener: listenerTwo });
  });

  act(() => {
    EVENTED.fire('test', 'bar');
  });

  expect(listenerOne).not.toHaveBeenCalled();
  expect(listenerTwo).toHaveBeenCalledWith('bar');

  // Check that rerender does not fail with null value
  EVENTED = null;
  act(() => {
    rerender();
  });
});
