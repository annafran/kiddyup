import { MapboxSearch } from '@mapbox/search-js-core';
import { renderHook, act } from '@testing-library/react-hooks';

import { useMapboxSearch } from '../../src/hooks/useMapboxSearch';

const ACCESS_TOKEN = 'xyz';

describe('useMapboxSearch', () => {
  it('works with access token', () => {
    const { result, rerender } = renderHook(
      ({ accessToken }) => useMapboxSearch({ accessToken }),
      { initialProps: { accessToken: ACCESS_TOKEN } }
    );

    expect(result.current).toEqual(expect.any(MapboxSearch));
    expect(result.current.accessToken).toEqual(ACCESS_TOKEN);

    act(() => {
      rerender({ accessToken: 'abc' });
    });

    expect(result.current.accessToken).toEqual('abc');
  });

  it('works with options', () => {
    const { result, rerender } = renderHook(
      ({ options }) =>
        useMapboxSearch({ accessToken: ACCESS_TOKEN, ...options }),
      { initialProps: { options: {} } }
    );

    expect(result.current).toEqual(expect.any(MapboxSearch));
    expect(result.current.defaults).toEqual(MapboxSearch.defaults);

    act(() => {
      rerender({ options: { language: 'jp' } });
    });

    expect(result.current.defaults).toEqual({
      ...MapboxSearch.defaults,
      language: 'jp'
    });

    // Make sure previous language is "undone".
    act(() => {
      rerender({ options: { proximity: [0, 0] } });
    });

    expect(result.current.defaults).toEqual({
      ...MapboxSearch.defaults,
      language: 'en',
      proximity: [0, 0]
    });
  });
});
