import React from 'react';
import { AutofillOptions, AutofillSuggestionResponse, AutofillRetrieveResponse } from '@mapbox/search-js-core';
import { MapboxAddressAutofill, Theme, AddressConfirmOptions, PopoverOptions } from '@mapbox/search-js-web';
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'mapbox-address-autofill': any;
        }
    }
}
/**
 * @typedef AddressAutofillRefType
 */
export interface AddressAutofillRefType {
    /**
     * @see {@link MapboxAddressAutofill#focus}
     */
    focus: typeof MapboxAddressAutofill.prototype.focus;
}
/**
 * @typedef AddressAutofillProps
 */
export interface AddressAutofillProps {
    /**
     * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.
     */
    accessToken: string;
    /**
     * Options to pass to the underlying {@link MapboxAutofill} interface.
     * @example
     * ```typescript
     * <AddressAutofill options={{
     *  language: 'en',
     *  country: 'US',
     * }}>
     * ```
     */
    options?: Partial<AutofillOptions>;
    /**
     * The {@link Theme} to use for styling the autofill and confirmation dialog
     * components.
     * @example
     * ```typescript
     * <AddressAutofill theme={{
     *   variables: {
     *     colorPrimary: 'myBrandRed'
     *   }
     * }}>
     * ```
     */
    theme?: Theme;
    /**
     * The {@link PopoverOptions} to define popover positioning.
     * @example
     * ```typescript
     * <AddressAutofill popoverOptions={{
     *   placement: 'top-start',
     *   flip: true,
     *   offset: 5
     * }}>
     * ```
     */
    popoverOptions?: Partial<PopoverOptions>;
    /**
     * If true, forms autofilled by the browser will prompt the
     * {@link confirmAddress} dialog for user confirmation.
     * An {@link AddressConfirmOptions} object can also be passed
     * to prompt {@link confirmAddress} with custom options.
     * Defaults to false.
     * @example
     * ```typescript
     * <AddressAutofill confirmOnBrowserAutofill={{
     *   minimap: true,
     *   skipConfirmModal: (feature) =>
     *     ['exact', 'high'].includes(
     *       feature.properties.match_code.confidence
     *     )
     * }}>
     * ```
     */
    confirmOnBrowserAutofill?: boolean | AddressConfirmOptions;
    /**
     * Children to render inside the autofill component. This **must** include
     * an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element
     * with either autocomplete type `"street-address"` or `"address-line1"`.
     */
    children: React.ReactChild;
    /**
     * Fired when the user is typing in the input and provides a list of suggestions.
     * The underlying response from {@link MapboxAutofill} is passed.
     */
    onSuggest?: (res: AutofillSuggestionResponse) => void;
    /**
     * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.
     * The underlying error is passed.
     */
    onSuggestError?: (error: Error) => void;
    /**
     * Fired when the user has selected a suggestion, before the form is autofilled.
     * The underlying response from {@link MapboxAutofill} is passed.
     */
    onRetrieve?: (res: AutofillRetrieveResponse) => void;
}
/**
 * `<AddressAutofill>` is a React component that wraps an address
 * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with intelligent, location-aware autocomplete functionality.
 *
 * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).
 *
 * This component must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form), and the form
 * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have
 * this functionality.
 * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)
 * - [Autofill](https://web.dev/learn/forms/autofill/)
 *
 * Internally, this wraps the [`<mapbox-address-autofill>`](https://docs.mapbox.com/mapbox-search-js/api/web/autofill/#mapboxaddressautofill) element.
 *
 * @function AddressAutofill
 * @param {AddressAutofillProps} props
 * @example
 * ```typescript
 * export function Component() {
 *   const [value, setValue] = React.useState('');
 *   return (
 *     <form>
 *       <AddressAutofill accessToken={<your access token here>}>
 *         <input
 *           autoComplete="shipping address-line1"
 *           value={value}
 *           onChange={(e) => setValue(e.target.value)}
 *         />
 *       </AddressAutofill>
 *     </form>
 *   );
 * }
 * ```
 */
export declare const AddressAutofill: React.ForwardRefExoticComponent<AddressAutofillProps & React.RefAttributes<unknown>>;
